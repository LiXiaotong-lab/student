{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请确认密码\"));\n      } else if (value !== this.user.newPassword) {\n        callback(new Error(\"确认密码错误\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      baseUrl: \"http://localhost:3000\",\n      // 确保这里是你的服务器URL\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || \"{}\"),\n      dialogVisible: false,\n      rules: {\n        password: [{\n          required: true,\n          message: \"请输入原始密码\",\n          trigger: \"blur\"\n        }],\n        newPassword: [{\n          required: true,\n          message: \"请输入新密码\",\n          trigger: \"blur\"\n        }],\n        confirmPassword: [{\n          validator: validatePassword,\n          required: true,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    update() {\n      // 保存当前的用户信息到数据库\n      this.$request.put(\"/user/update\", this.user).then(res => {\n        if (res.code === \"200\") {\n          // 成功更新\n          this.$message.success(\"保存成功\");\n          // 更新浏览器缓存里的用户信息\n          localStorage.setItem(\"xm-user\", JSON.stringify(this.user));\n\n          // 触发父级的数据更新\n          this.$emit(\"update:user\");\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      console.log(\"Upload response:\", response); // 打印响应数据\n      if (response.code === 200) {\n        // 确认上传成功\n        this.$set(this.user, \"avatar\", response.data.url); // 确保 response.data.url 是图片链接\n      } else {\n        this.$message.error(\"上传失败：\" + response.msg);\n      }\n    },\n    handleAvatarError(err, file, fileList) {\n      console.error(\"Upload error:\", err); // 打印错误信息\n      this.$message.error(\"上传失败\");\n    },\n    // 修改密码\n    updatePassword() {\n      this.dialogVisible = true;\n    },\n    save() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request.put(\"/updatePassword\", this.user).then(res => {\n            if (res.code === \"200\") {\n              // 成功更新\n              this.$message.success(\"修改密码成功\");\n              this.$router.push(\"/login\");\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","validatePassword","rule","value","callback","Error","user","newPassword","baseUrl","JSON","parse","localStorage","getItem","dialogVisible","rules","password","required","message","trigger","confirmPassword","validator","created","methods","update","$request","put","then","res","code","$message","success","setItem","stringify","$emit","error","msg","handleAvatarSuccess","response","file","fileList","console","log","$set","url","handleAvatarError","err","updatePassword","save","$refs","formRef","validate","valid","$router","push"],"sources":["src/views/front/Person.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-content\">\r\n    <el-card style=\"width: 50%; margin: 30px auto\">\r\n      <div style=\"text-align: right; margin-bottom: 20px\">\r\n        <el-button type=\"primary\" @click=\"updatePassword\">修改密码</el-button>\r\n      </div>\r\n      <el-form :model=\"user\" label-width=\"80px\" style=\"padding-right: 20px\">\r\n        <div style=\"margin: 15px; text-align: center\">\r\n          <el-upload\r\n            class=\"avatar-uploader\"\r\n            :action=\"baseUrl + '/files/upload'\"\r\n            :show-file-list=\"false\"\r\n            :on-success=\"handleAvatarSuccess\"\r\n            :on-error=\"handleAvatarError\">\r\n            <img v-if=\"user.avatar\" :src=\"user.avatar\" class=\"avatar\" />\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n          </el-upload>\r\n        </div>\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input\r\n            v-model=\"user.username\"\r\n            placeholder=\"用户名\"\r\n            disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"昵称\" prop=\"name\">\r\n          <el-input v-model=\"user.name\" placeholder=\"昵称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\" prop=\"phone\">\r\n          <el-input v-model=\"user.phone\" placeholder=\"电话\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"user.email\" placeholder=\"邮箱\"></el-input>\r\n        </el-form-item>\r\n        <div style=\"text-align: center; margin-bottom: 20px\">\r\n          <el-button type=\"primary\" @click=\"update\">保 存</el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n    <el-dialog\r\n      title=\"修改密码\"\r\n      :visible.sync=\"dialogVisible\"\r\n      width=\"30%\"\r\n      :close-on-click-modal=\"false\"\r\n      destroy-on-close>\r\n      <el-form\r\n        :model=\"user\"\r\n        label-width=\"80px\"\r\n        style=\"padding-right: 20px\"\r\n        :rules=\"rules\"\r\n        ref=\"formRef\">\r\n        <el-form-item label=\"原始密码\" prop=\"password\">\r\n          <el-input\r\n            show-password\r\n            v-model=\"user.password\"\r\n            placeholder=\"原始密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n          <el-input\r\n            show-password\r\n            v-model=\"user.newPassword\"\r\n            placeholder=\"新密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n          <el-input\r\n            show-password\r\n            v-model=\"user.confirmPassword\"\r\n            placeholder=\"确认密码\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请确认密码\"));\r\n      } else if (value !== this.user.newPassword) {\r\n        callback(new Error(\"确认密码错误\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      baseUrl: \"http://localhost:3000\", // 确保这里是你的服务器URL\r\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || \"{}\"),\r\n      dialogVisible: false,\r\n\r\n      rules: {\r\n        password: [\r\n          { required: true, message: \"请输入原始密码\", trigger: \"blur\" },\r\n        ],\r\n        newPassword: [\r\n          { required: true, message: \"请输入新密码\", trigger: \"blur\" },\r\n        ],\r\n        confirmPassword: [\r\n          { validator: validatePassword, required: true, trigger: \"blur\" },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  created() {},\r\n  methods: {\r\n    update() {\r\n      // 保存当前的用户信息到数据库\r\n      this.$request.put(\"/user/update\", this.user).then((res) => {\r\n        if (res.code === \"200\") {\r\n          // 成功更新\r\n          this.$message.success(\"保存成功\");\r\n          // 更新浏览器缓存里的用户信息\r\n          localStorage.setItem(\"xm-user\", JSON.stringify(this.user));\r\n\r\n          // 触发父级的数据更新\r\n          this.$emit(\"update:user\");\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      console.log(\"Upload response:\", response); // 打印响应数据\r\n      if (response.code === 200) {\r\n        // 确认上传成功\r\n        this.$set(this.user, \"avatar\", response.data.url); // 确保 response.data.url 是图片链接\r\n      } else {\r\n        this.$message.error(\"上传失败：\" + response.msg);\r\n      }\r\n    },\r\n    handleAvatarError(err, file, fileList) {\r\n      console.error(\"Upload error:\", err); // 打印错误信息\r\n      this.$message.error(\"上传失败\");\r\n    },\r\n    // 修改密码\r\n    updatePassword() {\r\n      this.dialogVisible = true;\r\n    },\r\n    save() {\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request.put(\"/updatePassword\", this.user).then((res) => {\r\n            if (res.code === \"200\") {\r\n              // 成功更新\r\n              this.$message.success(\"修改密码成功\");\r\n              this.$router.push(\"/login\");\r\n            } else {\r\n              this.$message.error(res.msg);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/deep/.el-form-item__label {\r\n  font-weight: bold;\r\n}\r\n/deep/.el-upload {\r\n  border-radius: 50%;\r\n}\r\n/deep/.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 50%;\r\n}\r\n/deep/.avatar-uploader .el-upload:hover {\r\n  border-color: #409eff;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 120px;\r\n  height: 120px;\r\n  line-height: 120px;\r\n  text-align: center;\r\n  border-radius: 50%;\r\n}\r\n.avatar {\r\n  width: 120px;\r\n  height: 120px;\r\n  display: block;\r\n  border-radius: 50%;\r\n}\r\n</style>\r\n"],"mappings":";AA8EA;EACAA,KAAA;IACA,MAAAC,gBAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,IAAA,CAAAC,WAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAI,OAAA;MAAA;MACAF,IAAA,EAAAG,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,aAAA;MAEAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAX,WAAA,GACA;UAAAS,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,eAAA,GACA;UAAAC,SAAA,EAAAnB,gBAAA;UAAAe,QAAA;UAAAE,OAAA;QAAA;MAEA;IACA;EACA;EACAG,QAAA;EACAC,OAAA;IACAC,OAAA;MACA;MACA,KAAAC,QAAA,CAAAC,GAAA,sBAAAnB,IAAA,EAAAoB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACA;UACAnB,YAAA,CAAAoB,OAAA,YAAAtB,IAAA,CAAAuB,SAAA,MAAA1B,IAAA;;UAEA;UACA,KAAA2B,KAAA;QACA;UACA,KAAAJ,QAAA,CAAAK,KAAA,CAAAP,GAAA,CAAAQ,GAAA;QACA;MACA;IACA;IACAC,oBAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA;MACAC,OAAA,CAAAC,GAAA,qBAAAJ,QAAA;MACA,IAAAA,QAAA,CAAAT,IAAA;QACA;QACA,KAAAc,IAAA,MAAApC,IAAA,YAAA+B,QAAA,CAAArC,IAAA,CAAA2C,GAAA;MACA;QACA,KAAAd,QAAA,CAAAK,KAAA,WAAAG,QAAA,CAAAF,GAAA;MACA;IACA;IACAS,kBAAAC,GAAA,EAAAP,IAAA,EAAAC,QAAA;MACAC,OAAA,CAAAN,KAAA,kBAAAW,GAAA;MACA,KAAAhB,QAAA,CAAAK,KAAA;IACA;IACA;IACAY,eAAA;MACA,KAAAjC,aAAA;IACA;IACAkC,KAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAA3B,QAAA,CAAAC,GAAA,yBAAAnB,IAAA,EAAAoB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAsB,OAAA,CAAAC,IAAA;YACA;cACA,KAAAxB,QAAA,CAAAK,KAAA,CAAAP,GAAA,CAAAQ,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}