{"ast":null,"code":"export default {\n  name: \"Admin\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || \"{}\"),\n      rules: {\n        name: [{\n          required: true,\n          message: \"请输入专业名称\",\n          trigger: \"blur\"\n        }],\n        majorId: [{\n          required: true,\n          message: \"请输入专业编号\",\n          trigger: \"blur\"\n        }],\n        collegeId: [{\n          required: true,\n          message: \"请输入学院(学院编号)\",\n          trigger: \"blur\"\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    // 编辑数据函数\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    // 保存函数\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? \"/major/update\" : \"/major/add\",\n            method: this.form.id ? \"PUT\" : \"POST\",\n            data: this.form\n          }).then(res => {\n            if (res.code === \"200\") {\n              // 表示成功保存\n              this.$message.success(\"保存成功\");\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n    // 删除函数\n    del(id) {\n      // 单个删除\n      this.$confirm(\"您确定删除吗？\", \"确认删除\", {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete(\"/major/delete/\" + id).then(res => {\n          if (res.code === \"200\") {\n            // 表示操作成功\n            this.$message.success(\"操作成功\");\n            this.load(1);\n          } else {\n            this.$message.error(\"专业已有学生，无法删除！\"); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning(\"请选择数据\");\n        return;\n      }\n      this.$confirm(\"您确定批量删除这些数据吗？\", \"确认删除\", {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete(\"/major/delete/batch\", {\n          data: this.ids\n        }).then(res => {\n          if (res.code === \"200\") {\n            // 表示操作成功\n            this.$message.success(\"操作成功\");\n            this.load(1);\n          } else {\n            this.$message.error(\"存在专业已有学生，无法删除！\"); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get(\"/major/selectPage\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    // 重置函数\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n    // 分页函数\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","majorId","collegeId","ids","created","load","methods","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","$request","url","id","method","then","res","code","$message","success","error","msg","handleSelectionChange","rows","map","v","del","$confirm","type","response","delete","catch","delBatch","length","warning","get","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Major.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 查找 -->\n    <div class=\"search\">\n      <el-input\n        placeholder=\"请输入专业名称查询\"\n        style=\"width: 200px\"\n        v-model=\"name\"></el-input>\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\"\n        >查询</el-button\n      >\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\"\n        >重置</el-button\n      >\n    </div>\n    <!-- 增加，删除按钮 -->\n    <div class=\"operation\" v-if=\"user.role === 'ADMIN'\">\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n    </div>\n\n    <!-- 表格内容 -->\n    <div class=\"table\">\n      <el-table\n        :data=\"tableData\"\n        stripe\n        @selection-change=\"handleSelectionChange\"\n        border\n        fit>\n        <!-- 多选 -->\n        <el-table-column\n          type=\"selection\"\n          width=\"55\"\n          align=\"center\"\n          v-if=\"user.role === 'ADMIN'\"></el-table-column>\n\n        <!-- <el-table-column\n          prop=\"id\"\n          label=\"序号\"\n          width=\"70\"\n          align=\"center\"\n          sortable></el-table-column> -->\n\n        <el-table-column\n          prop=\"majorId\"\n          label=\"专业编号\"\n          width=\"120\"\n          align=\"center\"></el-table-column>\n\n        <el-table-column\n          prop=\"name\"\n          label=\"专业名称\"\n          width=\"170\"\n          align=\"center\"></el-table-column>\n        <el-table-column\n          prop=\"description\"\n          label=\"专业介绍\"\n          show-overflow-tooltip\n          align=\"center\"></el-table-column>\n        <el-table-column\n          prop=\"collegeName\"\n          label=\"所属学院\"\n          width=\"170\"\n          align=\"center\"></el-table-column>\n\n        <!-- 信息后面的操作按钮 -->\n        <el-table-column\n          label=\"操作\"\n          align=\"center\"\n          width=\"180\"\n          v-if=\"user.role === 'ADMIN'\">\n          <template v-slot=\"scope\">\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              plain\n              @click=\"handleEdit(scope.row)\"\n              v-if=\"user.role === 'ADMIN'\"\n              >编辑</el-button\n            >\n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              plain\n              @click=\"del(scope.row.id)\"\n              v-if=\"user.role === 'ADMIN'\"\n              >删除</el-button\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页 -->\n      <div class=\"pagination\">\n        <el-pagination\n          background\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"pageNum\"\n          :page-sizes=\"[5, 10, 20]\"\n          :page-size=\"pageSize\"\n          layout=\"total, prev, pager, next\"\n          :total=\"total\">\n        </el-pagination>\n      </div>\n\n      <!-- 编辑信息---------------------------------------------------- -->\n      <el-dialog\n        title=\"专业信息\"\n        :visible.sync=\"fromVisible\"\n        width=\"40%\"\n        :close-on-click-modal=\"false\"\n        destroy-on-close>\n        <el-form\n          :model=\"form\"\n          label-width=\"100px\"\n          style=\"padding-right: 50px\"\n          :rules=\"rules\"\n          ref=\"formRef\">\n          <el-form-item label=\"专业编号\" prop=\"majorId\">\n            <el-input v-model=\"form.majorId\" placeholder=\"专业编号\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"专业名称\" prop=\"name\">\n            <el-input v-model=\"form.name\" placeholder=\"专业名称\"></el-input>\n          </el-form-item>\n\n          <el-form-item label=\"专业介绍\" prop=\"description\">\n            <el-input\n              v-model=\"form.description\"\n              placeholder=\"专业介绍\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"所属学院\" prop=\"collegeId\">\n            <el-input\n              v-model=\"form.collegeId\"\n              placeholder=\"所属学院(请输入学院编号)\"></el-input>\n          </el-form-item>\n        </el-form>\n\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"fromVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n        </div>\n      </el-dialog>\n      <!-- 编辑信息------------------------------------------------------>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Admin\",\n  data() {\n    return {\n      tableData: [], // 所有的数据\n      pageNum: 1, // 当前的页码\n      pageSize: 10, // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || \"{}\"),\n      rules: {\n        name: [{ required: true, message: \"请输入专业名称\", trigger: \"blur\" }],\n        majorId: [\n          { required: true, message: \"请输入专业编号\", trigger: \"blur\" },\n        ],\n        collegeId: [\n          { required: true, message: \"请输入学院(学院编号)\", trigger: \"blur\" },\n        ],\n      },\n      ids: [],\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    // 编辑数据函数\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    // 保存函数\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? \"/major/update\" : \"/major/add\",\n            method: this.form.id ? \"PUT\" : \"POST\",\n            data: this.form,\n          }).then((res) => {\n            if (res.code === \"200\") {\n              // 表示成功保存\n              this.$message.success(\"保存成功\");\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map((v) => v.id); //  [1,2]\n    },\n    // 删除函数\n    del(id) {\n      // 单个删除\n      this.$confirm(\"您确定删除吗？\", \"确认删除\", { type: \"warning\" })\n        .then((response) => {\n          this.$request.delete(\"/major/delete/\" + id).then((res) => {\n            if (res.code === \"200\") {\n              // 表示操作成功\n              this.$message.success(\"操作成功\");\n              this.load(1);\n            } else {\n              this.$message.error(\"专业已有学生，无法删除！\"); // 弹出错误的信息\n            }\n          });\n        })\n        .catch(() => {});\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning(\"请选择数据\");\n        return;\n      }\n      this.$confirm(\"您确定批量删除这些数据吗？\", \"确认删除\", {\n        type: \"warning\",\n      })\n        .then((response) => {\n          this.$request\n            .delete(\"/major/delete/batch\", { data: this.ids })\n            .then((res) => {\n              if (res.code === \"200\") {\n                // 表示操作成功\n                this.$message.success(\"操作成功\");\n                this.load(1);\n              } else {\n                this.$message.error(\"存在专业已有学生，无法删除！\"); // 弹出错误的信息\n              }\n            });\n        })\n        .catch(() => {});\n    },\n\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request\n        .get(\"/major/selectPage\", {\n          params: {\n            pageNum: this.pageNum,\n            pageSize: this.pageSize,\n            name: this.name,\n          },\n        })\n        .then((res) => {\n          this.tableData = res.data?.list;\n          this.total = res.data?.total;\n        });\n    },\n    // 重置函数\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n\n    // 分页函数\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}