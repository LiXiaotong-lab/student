{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请确认密码'));\n      } else if (value !== this.passwordForm.newPassword) {\n        callback(new Error('确认密码错误'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      dialogVisible: false,\n      passwordForm: {\n        password: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      rules: {\n        password: [{\n          required: true,\n          message: '请输入原始密码',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          validator: validatePassword,\n          required: true,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    update() {\n      this.$request.put('/user/update', this.user).then(res => {\n        if (res.code === '200') {\n          this.$message.success('保存成功');\n          localStorage.setItem('xm-user', JSON.stringify(this.user));\n          this.$emit('update:user');\n        } else {\n          this.$message.error(res.msg);\n        }\n      }).catch(error => {\n        this.$message.error('保存失败');\n        console.error(error);\n      });\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      this.$set(this.user, 'avatar', response.data);\n    },\n    updatePassword() {\n      this.dialogVisible = true;\n    },\n    save() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request.put('/updatePassword', this.passwordForm).then(res => {\n            if (res.code === '200') {\n              this.$message.success('修改密码成功');\n              this.dialogVisible = false;\n              this.$router.push('/login');\n            } else {\n              this.$message.error(res.msg);\n            }\n          }).catch(error => {\n            this.$message.error('修改密码失败');\n            console.error(error);\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","validatePassword","rule","value","callback","Error","passwordForm","newPassword","user","JSON","parse","localStorage","getItem","dialogVisible","password","confirmPassword","rules","required","message","trigger","validator","methods","update","$request","put","then","res","code","$message","success","setItem","stringify","$emit","error","msg","catch","console","handleAvatarSuccess","response","file","fileList","$set","updatePassword","save","$refs","formRef","validate","valid","$router","push"],"sources":["src/views/front/Person.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-content\">\r\n    <el-card style=\"width: 50%; margin: 30px auto\">\r\n      <div style=\"text-align: right; margin-bottom: 20px\">\r\n        <el-button type=\"primary\" @click=\"updatePassword\">修改密码</el-button>\r\n      </div>\r\n      <el-form :model=\"user\" label-width=\"80px\" style=\"padding-right: 20px\">\r\n        <div style=\"margin: 15px; text-align: center\">\r\n          <el-upload\r\n              class=\"avatar-uploader\"\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :show-file-list=\"false\"\r\n              :on-success=\"handleAvatarSuccess\"\r\n          >\r\n            <img v-if=\"user.avatar\" :src=\"user.avatar\" class=\"avatar\" />\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n          </el-upload>\r\n        </div>\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"user.username\" placeholder=\"用户名\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"昵称\" prop=\"name\">\r\n          <el-input v-model=\"user.name\" placeholder=\"昵称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\" prop=\"phone\">\r\n          <el-input v-model=\"user.phone\" placeholder=\"电话\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"user.email\" placeholder=\"邮箱\"></el-input>\r\n        </el-form-item>\r\n        <div style=\"text-align: center; margin-bottom: 20px\">\r\n          <el-button type=\"primary\" @click=\"update\">保 存</el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n    <el-dialog title=\"修改密码\" :visible.sync=\"dialogVisible\" width=\"30%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form :model=\"passwordForm\" label-width=\"80px\" style=\"padding-right: 20px\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"原始密码\" prop=\"password\">\r\n          <el-input show-password v-model=\"passwordForm.password\" placeholder=\"原始密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n          <el-input show-password v-model=\"passwordForm.newPassword\" placeholder=\"新密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n          <el-input show-password v-model=\"passwordForm.confirmPassword\" placeholder=\"确认密码\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请确认密码'))\r\n      } else if (value !== this.passwordForm.newPassword) {\r\n        callback(new Error('确认密码错误'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      dialogVisible: false,\r\n      passwordForm: {\r\n        password: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      },\r\n      rules: {\r\n        password: [\r\n          { required: true, message: '请输入原始密码', trigger: 'blur' },\r\n        ],\r\n        newPassword: [\r\n          { required: true, message: '请输入新密码', trigger: 'blur' },\r\n        ],\r\n        confirmPassword: [\r\n          { validator: validatePassword, required: true, trigger: 'blur' },\r\n        ],\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.$request.put('/user/update', this.user).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success('保存成功')\r\n          localStorage.setItem('xm-user', JSON.stringify(this.user))\r\n          this.$emit('update:user')\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      }).catch(error => {\r\n        this.$message.error('保存失败')\r\n        console.error(error)\r\n      })\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      this.$set(this.user, 'avatar', response.data)\r\n    },\r\n    updatePassword() {\r\n      this.dialogVisible = true\r\n    },\r\n    save() {\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request.put('/updatePassword', this.passwordForm).then(res => {\r\n            if (res.code === '200') {\r\n              this.$message.success('修改密码成功')\r\n              this.dialogVisible = false\r\n              this.$router.push('/login')\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          }).catch(error => {\r\n            this.$message.error('修改密码失败')\r\n            console.error(error)\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AAuDA;EACAA,KAAA;IACA,MAAAC,gBAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,YAAA,CAAAC,WAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAI,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,aAAA;MACAP,YAAA;QACAQ,QAAA;QACAP,WAAA;QACAQ,eAAA;MACA;MACAC,KAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAZ,WAAA,GACA;UAAAU,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,eAAA,GACA;UAAAK,SAAA,EAAAnB,gBAAA;UAAAgB,QAAA;UAAAE,OAAA;QAAA;MAEA;IACA;EACA;EACAE,OAAA;IACAC,OAAA;MACA,KAAAC,QAAA,CAAAC,GAAA,sBAAAhB,IAAA,EAAAiB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACAlB,YAAA,CAAAmB,OAAA,YAAArB,IAAA,CAAAsB,SAAA,MAAAvB,IAAA;UACA,KAAAwB,KAAA;QACA;UACA,KAAAJ,QAAA,CAAAK,KAAA,CAAAP,GAAA,CAAAQ,GAAA;QACA;MACA,GAAAC,KAAA,CAAAF,KAAA;QACA,KAAAL,QAAA,CAAAK,KAAA;QACAG,OAAA,CAAAH,KAAA,CAAAA,KAAA;MACA;IACA;IACAI,oBAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA;MACA,KAAAC,IAAA,MAAAjC,IAAA,YAAA8B,QAAA,CAAAtC,IAAA;IACA;IACA0C,eAAA;MACA,KAAA7B,aAAA;IACA;IACA8B,KAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAxB,QAAA,CAAAC,GAAA,yBAAAlB,YAAA,EAAAmB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAhB,aAAA;cACA,KAAAmC,OAAA,CAAAC,IAAA;YACA;cACA,KAAArB,QAAA,CAAAK,KAAA,CAAAP,GAAA,CAAAQ,GAAA;YACA;UACA,GAAAC,KAAA,CAAAF,KAAA;YACA,KAAAL,QAAA,CAAAK,KAAA;YACAG,OAAA,CAAAH,KAAA,CAAAA,KAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}