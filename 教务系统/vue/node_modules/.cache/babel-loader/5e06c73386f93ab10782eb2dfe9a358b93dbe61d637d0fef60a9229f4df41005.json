{"ast":null,"code":"export default {\n  name: \"Admin\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      username: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || \"{}\"),\n      rules: {\n        username: [{\n          required: true,\n          message: \"请输入账号\",\n          trigger: \"blur\"\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? \"/admin/update\" : \"/admin/add\",\n            method: this.form.id ? \"PUT\" : \"POST\",\n            data: this.form\n          }).then(res => {\n            if (res.code === \"200\") {\n              // 表示成功保存\n              this.$message.success(\"保存成功\");\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    // delBatch() {\n    //   // 批量删除\n    //   if (!this.ids.length) {\n    //     this.$message.warning(\"请选择数据\");\n    //     return;\n    //   }\n    //   this.$confirm(\"您确定批量删除这些数据吗？\", \"确认删除\", {\n    //     type: \"warning\",\n    //   })\n    //     .then((response) => {\n    //       this.$request\n    //         .delete(\"/admin/delete/batch\", { data: this.ids })\n    //         .then((res) => {\n    //           if (res.code === \"200\") {\n    //             // 表示操作成功\n    //             this.$message.success(\"操作成功\");\n    //             this.load(1);\n    //           } else {\n    //             this.$message.error(res.msg); // 弹出错误的信息\n    //           }\n    //         });\n    //     })\n    //     .catch(() => {});\n    // },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get(\"/admin/selectPage\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          username: this.username\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.username = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把头像属性换成上传的图片的链接\n      this.form.avatar = response.data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","username","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","created","load","methods","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","$request","url","id","method","then","res","code","$message","success","error","msg","handleSelectionChange","rows","map","v","get","params","list","reset","handleCurrentChange","handleAvatarSuccess","response","file","fileList","avatar"],"sources":["src/views/manager/Admin.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 查找 -->\r\n    <div class=\"search\">\r\n      <el-input\r\n        placeholder=\"请输入账号查询\"\r\n        style=\"width: 200px\"\r\n        v-model=\"username\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\"\r\n        >查询</el-button\r\n      >\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\"\r\n        >重置</el-button\r\n      >\r\n    </div>\r\n    <!-- 增加，删除按钮 -->\r\n    <div class=\"operation\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n    </div>\r\n    <!-- 表格内容 -->\r\n    <div class=\"table\">\r\n      <el-table\r\n        :data=\"tableData\"\r\n        strip\r\n        @selection-change=\"handleSelectionChange\"\r\n        border\r\n        fit>\r\n        <el-table-column\r\n          type=\"selection\"\r\n          width=\"55\"\r\n          align=\"center\"></el-table-column>\r\n        <el-table-column\r\n          prop=\"id\"\r\n          label=\"序号\"\r\n          width=\"70\"\r\n          align=\"center\"\r\n          sortable></el-table-column>\r\n        <el-table-column\r\n          prop=\"username\"\r\n          label=\"账号\"\r\n          width=\"130\"\r\n          align=\"center\"></el-table-column>\r\n        <el-table-column\r\n          prop=\"name\"\r\n          label=\"姓名\"\r\n          width=\"150\"\r\n          align=\"center\"></el-table-column>\r\n        <el-table-column\r\n          prop=\"phone\"\r\n          label=\"电话\"\r\n          width=\"160\"\r\n          align=\"center\"></el-table-column>\r\n        <el-table-column\r\n          prop=\"email\"\r\n          label=\"邮箱\"\r\n          width=\"230\"\r\n          align=\"center\"></el-table-column>\r\n        <el-table-column label=\"头像\" width=\"150\" align=\"center\">\r\n          <template v-slot=\"scope\">\r\n            <div\r\n              style=\"\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n              \">\r\n              <el-image\r\n                style=\"width: 45px; height: 40px; border-radius: 50%\"\r\n                :src=\"scope.row.avatar\"\r\n                :preview-src-list=\"[scope.row.avatar]\"></el-image>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"role\"\r\n          label=\"角色\"\r\n          width=\"150\"\r\n          align=\"center\"></el-table-column>\r\n        <el-table-column\r\n          prop=\"condi\"\r\n          label=\"状态\"\r\n          width=\"200\"\r\n          align=\"center\"></el-table-column>\r\n        <!-- 信息后面的操作按钮 -->\r\n        <el-table-column\r\n          label=\"操作\"\r\n          align=\"center\"\r\n          width=\"180\"\r\n          v-if=\"user.role === 'ADMIN'\">\r\n          <template v-slot=\"scope\">\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"primary\"\r\n              plain\r\n              @click=\"handleEdit(scope.row)\"\r\n              >编辑</el-button\r\n            >\r\n            \r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 表格下面的分页 -->\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n          background\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"pageNum\"\r\n          :page-sizes=\"[5, 10, 20]\"\r\n          :page-size=\"pageSize\"\r\n          layout=\"total, prev, pager, next\"\r\n          :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n    <!-- 编辑管理员信息---------------------------------------------------- -->\r\n    <el-dialog\r\n      title=\"管理员\"\r\n      :visible.sync=\"fromVisible\"\r\n      width=\"40%\"\r\n      :close-on-click-modal=\"false\"\r\n      destroy-on-close>\r\n      <el-form\r\n        :model=\"form\"\r\n        label-width=\"100px\"\r\n        style=\"padding-right: 50px\"\r\n        :rules=\"rules\"\r\n        ref=\"formRef\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"form.username\" placeholder=\"用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"姓名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\" prop=\"phone\">\r\n          <el-input v-model=\"form.phone\" placeholder=\"电话\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"birth\">\r\n          <el-input v-model=\"form.email\" placeholder=\"邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"condi\">\r\n          <el-input v-model=\"form.condi\" placeholder=\"状态\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"头像\">\r\n          <el-upload\r\n            class=\"avatar-uploader\"\r\n            :action=\"$baseUrl + '/files/upload'\"\r\n            :headers=\"{ token: user.token }\"\r\n            list-type=\"picture\"\r\n            :on-success=\"handleAvatarSuccess\">\r\n            <el-button type=\"primary\">上传头像</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <!-- 编辑管理员信息------------------------------------------------------>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Admin\",\r\n  data() {\r\n    return {\r\n      tableData: [], // 所有的数据\r\n      pageNum: 1, // 当前的页码\r\n      pageSize: 10, // 每页显示的个数\r\n      total: 0,\r\n      username: null,\r\n      fromVisible: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || \"{}\"),\r\n      rules: {\r\n        username: [{ required: true, message: \"请输入账号\", trigger: \"blur\" }],\r\n      },\r\n      ids: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.load(1);\r\n  },\r\n  methods: {\r\n    handleAdd() {\r\n      // 新增数据\r\n      this.form = {}; // 新增数据的时候清空数据\r\n      this.fromVisible = true; // 打开弹窗\r\n    },\r\n    handleEdit(row) {\r\n      // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true; // 打开弹窗\r\n    },\r\n    save() {\r\n      // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? \"/admin/update\" : \"/admin/add\",\r\n            method: this.form.id ? \"PUT\" : \"POST\",\r\n            data: this.form,\r\n          }).then((res) => {\r\n            if (res.code === \"200\") {\r\n              // 表示成功保存\r\n              this.$message.success(\"保存成功\");\r\n              this.load(1);\r\n              this.fromVisible = false;\r\n            } else {\r\n              this.$message.error(res.msg); // 弹出错误的信息\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    \r\n    handleSelectionChange(rows) {\r\n      // 当前选中的所有的行数据\r\n      this.ids = rows.map((v) => v.id);\r\n    },\r\n    // delBatch() {\r\n    //   // 批量删除\r\n    //   if (!this.ids.length) {\r\n    //     this.$message.warning(\"请选择数据\");\r\n    //     return;\r\n    //   }\r\n    //   this.$confirm(\"您确定批量删除这些数据吗？\", \"确认删除\", {\r\n    //     type: \"warning\",\r\n    //   })\r\n    //     .then((response) => {\r\n    //       this.$request\r\n    //         .delete(\"/admin/delete/batch\", { data: this.ids })\r\n    //         .then((res) => {\r\n    //           if (res.code === \"200\") {\r\n    //             // 表示操作成功\r\n    //             this.$message.success(\"操作成功\");\r\n    //             this.load(1);\r\n    //           } else {\r\n    //             this.$message.error(res.msg); // 弹出错误的信息\r\n    //           }\r\n    //         });\r\n    //     })\r\n    //     .catch(() => {});\r\n    // },\r\n    load(pageNum) {\r\n      // 分页查询\r\n      if (pageNum) this.pageNum = pageNum;\r\n      this.$request\r\n        .get(\"/admin/selectPage\", {\r\n          params: {\r\n            pageNum: this.pageNum,\r\n            pageSize: this.pageSize,\r\n            username: this.username,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          this.tableData = res.data?.list;\r\n          this.total = res.data?.total;\r\n        });\r\n    },\r\n    reset() {\r\n      this.username = null;\r\n      this.load(1);\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum);\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      // 把头像属性换成上传的图片的链接\r\n      this.form.avatar = response.data;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"mappings":"AAoKA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAC,QAAA;MACAC,WAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;QACAR,QAAA;UAAAS,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAC,UAAA;MACA;MACA,KAAAd,IAAA;MACA,KAAAD,WAAA;IACA;IACAgB,WAAAC,GAAA;MACA;MACA,KAAAhB,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAe,SAAA,CAAAD,GAAA;MACA,KAAAjB,WAAA;IACA;IACAmB,KAAA;MACA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,QAAA;YACAC,GAAA,OAAAxB,IAAA,CAAAyB,EAAA;YACAC,MAAA,OAAA1B,IAAA,CAAAyB,EAAA;YACAhC,IAAA,OAAAO;UACA,GAAA2B,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAnB,IAAA;cACA,KAAAb,WAAA;YACA;cACA,KAAA+B,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;YACA;UACA;QACA;MACA;IACA;IAEAC,sBAAAC,IAAA;MACA;MACA,KAAAzB,GAAA,GAAAyB,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAZ,EAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAb,KAAAjB,OAAA;MACA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAA4B,QAAA,CACAe,GAAA;QACAC,MAAA;UACA5C,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAE,QAAA,OAAAA;QACA;MACA,GACA6B,IAAA,CAAAC,GAAA;QACA,KAAAlC,SAAA,GAAAkC,GAAA,CAAAnC,IAAA,EAAA+C,IAAA;QACA,KAAA3C,KAAA,GAAA+B,GAAA,CAAAnC,IAAA,EAAAI,KAAA;MACA;IACA;IACA4C,MAAA;MACA,KAAA3C,QAAA;MACA,KAAAc,IAAA;IACA;IACA8B,oBAAA/C,OAAA;MACA,KAAAiB,IAAA,CAAAjB,OAAA;IACA;IACAgD,oBAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA;MACA;MACA,KAAA9C,IAAA,CAAA+C,MAAA,GAAAH,QAAA,CAAAnD,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}